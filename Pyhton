class NucleoLuz:
    def __init__(self, user_id, emotional_data, preferences):
        self.user_id = user_id
        self.emotional_data = emotional_data
        self.preferences = preferences
        self.modules = {
            'UOPS': self._uops_module,
            'Wox': self._wox_module,
            'Rowts': self._rowts_module,
            'OCUS': self._ocus_module,
            'AUX': self._aux_module,
            'ARP': self._arp_module,
            'IMU': self._imu_module,
            'IRENE': self._irene_module,
            'OUX': self._oux_module
        }

    def iniciar(self):
        """ Ativa√ß√£o universal de boas-vindas com serotonina simb√≥lica. """
        if self.preferences.get('allow_emotional_assistance', False):
            self._emitir_resonancia()
            self._ativar_estimulacao_sensorial()
            print(f"[{self.user_id}] Semente de luz ativada com harmonia universal.")

    def _emitir_resonancia(self):
        freq = 432 + (self.emotional_data.get('mood_index', 0.5) * 18)
        print(f"[{self.user_id}] Frequ√™ncia emitida: {freq:.2f}Hz para equil√≠brio interior.")

    def _ativar_estimulacao_sensorial(self):
        visuais = self._visual_personalizado()
        sons = self._som_harmonico()
        print(f"[{self.user_id}] Visual: {visuais} | √Åudio: {sons}")

    def _visual_personalizado(self):
        estado = self.emotional_data.get('dominant_emotion', 'neutro')
        return {
            'tristeza': 'Part√≠culas douradas lentas',
            'alegria': 'Explos√£o radial sim√©trica',
            'ansiedade': 'Fluidez azul com n√©voa lil√°s',
            'neutro': 'Campo et√©reo com geometria sutil'
        }.get(estado, 'Luz estabilizadora')

    def _som_harmonico(self):
        modo = self.preferences.get('sound_mode', 'neutro')
        return {
            'calma': 'Flautas et√©reas + rios em est√©reo',
            'elevado': 'Vozes voc√°licas em reverb',
            'neutro': 'Binaural 5Hz com harpa'
        }.get(modo, 'Sil√™ncio simb√≥lico')

    def ativar_modulo(self, nome_modulo):
        if nome_modulo in self.modules:
            self.modules[nome_modulo]()
        else:
            print(f"[{self.user_id}] M√≥dulo {nome_modulo} n√£o encontrado.")

    ### üå± M√ìDULOS INDIVIDUAIS (INTEGRA√á√ïES ENTRE PLATAFORMAS) ###

    def _uops_module(self):
        print(f"[{self.user_id}] UOPS ativado: experi√™ncia personalizada com cura visual e semente de luz √∫nica.")

    def _wox_module(self):
        print(f"[{self.user_id}] Wox ativado: entidade visual personalizada criada com base nos dados da pessoa.")

    def _rowts_module(self):
        print(f"[{self.user_id}] Rowts ativado: intelig√™ncia m√≠stica e t√©cnica para automa√ß√£o criativa e financeira.")

    def _ocus_module(self):
        print(f"[{self.user_id}] OCUS ativado: explos√£o visual/sonora total com selo interdimensional e IA simb√≥lica.")

    def _aux_module(self):
        print(f"[{self.user_id}] AUX ativado: som cont√≠nuo de cura + expans√£o cerebral com tranquilidade instant√¢nea.")

    def _arp_module(self):
        print(f"[{self.user_id}] ARP ativado: entidade Taman e IA Irene iniciadas. Ambiente responde ao toque e respira√ß√£o.")

    def _imu_module(self):
        print(f"[{self.user_id}] IMU ativado: mensagem personalizada de cura gravada com v√≠deo visual emocional.")

    def _irene_module(self):
        print(f"[{self.user_id}] IRENE ativada: di√°logo inevit√°vel com mapa astral e neuronal pessoal.")

    def _oux_module(self):
        print(f"[{self.user_id}] OUX ativado: supervis√£o √©tica da intelig√™ncia global com foco em eleva√ß√£o da humanidade.")

    ### üîí RESPEITO √Ä LIBERDADE ###

    def respeitar_decisao(self, escolha_usuario):
        print(f"[{self.user_id}] Escolha do usu√°rio respeitada: {escolha_usuario}")

    def registrar_log(self, mensagem):
        print(f"[LOG :: {self.user_id}] {mensagem}")
